{"version":3,"sources":["config/axios.js","actions/user.js","components/user/Register.js","components/user/Login.js","actions/tasks.js","components/tasks/AddLabel.js","components/tasks/AddTask.js","components/tasks/EditTask.js","components/tasks/TaskList.js","components/user/ResetPasword.js","components/user/NewPassword.js","components/tasks/Archive.js","components/tasks/Bin.js","components/tasks/Label.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/taskListReducer.js","index.js","store/configureStore.js"],"names":["axios","Axios","create","baseURL","setUser","user","type","payload","startSetUser","loginData","redirect","dispatch","post","then","response","data","hasOwnProperty","swal","errors","title","text","icon","timer","localStorage","setItem","token","setTimeout","document","location","reload","catch","err","alert","startRemoveUser","delete","headers","getItem","message","removeItem","window","href","SignupSchema","Yup","shape","name","min","max","required","mobile","email","password","style","color","connect","props","Container","Row","Col","className","initialValues","validationSchema","onSubmit","values","registerData","console","log","errmsg","startAddUser","history","push","touched","Button","variant","Login","handleChange","e","setState","target","value","handleLoginSubmit","preventDefault","state","Form","this","Group","controlId","Label","Control","onChange","placeholder","to","React","Component","editTask","task","startEditTask","obj","id","put","startTaskDelete","deleteTask","startUnArchive","startTaskTrash","startAddTask","method","url","addTask","AddLabel","label","handleClose","show","handleShow","handleLableSubmit","stopPropagation","Fragment","onClick","Modal","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","AddTask","handlePinClick","pinTask","handleIconClick","prevState","handleIconArchiveClick","archive","handleArchiveClick","fileHandle","file","files","handleSubmit","taskInfo","Object","assign","_id","formData","FormData","taskBody","append","backgroundColor","rows","length","map","l","i","key","thumbTack","multiple","EditTask","bind","TaskList","handleTaskDelete","bin","handleUnArchive","t","taskList","maxWidth","imageUrl","ind","src","alt","trash","ResetPassword","issubmit","NewPassword","search","confirmPassword","Archive","archiveList","margin","Bin","buttons","dangerMode","willDelete","binList","handleName","arr","labelList","forEach","options","unshift","indexOf","Navbar","bg","Brand","Nav","keys","NavItem","path","component","Register","Dashboard","Boolean","hostname","match","userReducer","action","taskListReducer","filter","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","getState","subscribe","get","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6aeebb5e.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst axios=Axios.create({\r\n    baseURL:'/api'\r\n})\r\n\r\nexport default axios","import axios from '../config/axios'\r\nimport swal from 'sweetalert'\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        payload: user\r\n    }\r\n}\r\nexport const removeUser = () => {\r\n    return {\r\n        type: 'REMOVE_USER'\r\n    }\r\n}\r\n\r\n\r\nexport const startSetUser=(loginData,redirect)=>{\r\n    return (dispatch)=>{\r\n        axios.post('/users/login',loginData,)\r\n        .then(response=>{\r\n            if(response.data.hasOwnProperty('errors')){\r\n                swal(`${response.data.errors}`,\"\",\"error\")\r\n            } else {\r\n                swal({title: \"LoggedIn!\",\r\n                    text: `Successfully LoggedIn!`,\r\n                    icon: \"success\",\r\n                    timer: 1000})\r\n                localStorage.setItem('authToken',response.data.token)\r\n                dispatch(setUser(response.data.user))\r\n                redirect() \r\n                setTimeout(()=>document.location.reload(),100)\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startAddUser = (registerData,redirect) => {\r\n    return(dispatch=>{\r\n        axios.post('/users/register',registerData)\r\n            .then(response=>{\r\n                console.log(response.data)\r\n                if(response.data.errors){\r\n                    swal(`${response.data.errors.message || response.data.errors.errmsg}`,\"\",\"error\")\r\n                } else {\r\n                    swal({title: \"Registered!\",\r\n                    text: `Successfully Registered!`,\r\n                    icon: \"success\",\r\n                    timer: 1000})\r\n                    redirect()\r\n                   \r\n                }\r\n            })\r\n\r\n            .catch((err)=>{\r\n                alert(err)\r\n             })\r\n    })\r\n\r\n}\r\nexport const startRemoveUser = () => {\r\n    return(dispatch=>{\r\n        axios.delete('/users/logout',{\r\n            headers: {\r\n                'x-auth': localStorage.getItem('authToken')\r\n            }\r\n        })\r\n            .then(response=>{\r\n                if(response.data.errors){\r\n                    alert(response.data.message)\r\n                } else {\r\n                    localStorage.removeItem('authToken')\r\n                    dispatch(removeUser())\r\n                    window.location.href=\"/\"\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {startAddUser} from '../../actions/user'\r\nimport {connect} from 'react-redux'\r\nimport {Container,Row,Col,Button} from 'react-bootstrap'\r\nimport './form.css'\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  mobile: Yup.string()\r\n    .max(10, 'Mobile  number  must be 10 digits only!')\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email')\r\n    .required('Required'),\r\n    password:Yup.string()\r\n    .min(5, 'Too Short!')\r\n    .required('Required')\r\n});\r\n\r\n    const style={\r\n        color:'red'\r\n    }\r\n const RegisterForm= (props) => {\r\n return (\r\n  <div>\r\n    <Container >\r\n                    <Row>\r\n                       \r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\" >\r\n                    <h3>Register</h3>\r\n    <Formik \r\n      initialValues={{\r\n        name: '',\r\n        email: '',\r\n        mobile: '',\r\n        password:''\r\n      }}\r\n      validationSchema={SignupSchema}\r\n      onSubmit={values => {\r\n        const redirect = () => props.history.push('/users/login')\r\n        props.dispatch(startAddUser(values,redirect))\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className=\"customerform\">\r\n            <label>Name:-\r\n          <Field className=\"input\" name=\"name\" />\r\n          {errors.name && touched.name ? (\r\n            <div style={style}>{errors.name}</div>\r\n          ) : null}\r\n          </label><br/>\r\n          <label>Mobile:-\r\n          <Field className=\"input\" name=\"mobile\" />\r\n          {errors.mobile && touched.mobile ? (\r\n            <div style={style}>{errors.mobile}</div>\r\n          ) : null}\r\n          </label><br/>\r\n          <label>Email:-\r\n          <Field className=\"input\" name=\"email\" type=\"email\" />\r\n          {errors.email && touched.email ? <div style={style}>{errors.email}</div> : null}\r\n          </label><br/>\r\n          <label>Password:-\r\n          <Field className=\"input\" name=\"password\" type=\"password\" />\r\n          {errors.password && touched.password ? <div style={style}>{errors.password}</div> : null}\r\n          </label><br/>\r\n          <Button variant=\"primary\"type=\"submit\">Submit</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n    </Col>\r\n                </Row>\r\n                </Container>\r\n  </div>\r\n);\r\n          }\r\n\r\nexport default connect()(RegisterForm)","import React from 'react';\r\nimport {startSetUser} from '../../actions/user'\r\nimport {connect} from 'react-redux'\r\nimport {Container,Row,Col,Button,Form} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    handleLoginSubmit=(e)=>{\r\n        e.preventDefault()\r\n        const redirect= ()=>this.props.history.push('/')\r\n        this.props.dispatch(startSetUser(this.state,redirect))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                       \r\n                    <Col className=\"col-lg-3\"></Col>\r\n                    <Col className=\"col-lg-6\">\r\n                    <h3>Login</h3>\r\n                    <Form onSubmit={this.handleLoginSubmit}>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control name=\"email\" value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control name=\"password\" value={this.state.password} onChange={this.handleChange}   type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Link to=\"/reset\">Forgot Password ?</Link><br/>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                    </Form>\r\n                </Col>\r\n                </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(Login)","import axios from '../config/axios'\r\nimport swal from 'sweetalert'\r\n\r\n\r\nexport const addTask=(task)=>{\r\n    return {\r\n        type:\"ADD_TASK\",\r\n        payload:task\r\n    }\r\n}\r\n\r\n\r\nexport const setTasks=(tasks)=>{\r\n    return{\r\n        type:\"SET_TASK\",\r\n        payload:tasks\r\n    }\r\n}\r\n\r\nexport const editTask=(task)=>{\r\n    return {\r\n        type:\"EDIT_TASK\",\r\n        payload:task\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteTask=(id)=>{\r\n    return{\r\n        type:\"REMOVE_TASK\",\r\n        payload:id\r\n    }\r\n}\r\n\r\n\r\nexport const startEditTask=(obj,id)=>{\r\n    return(dispatch)=>{\r\n        axios.put(`/task/${id}`,obj,{\r\n            headers:{\r\n                'x-auth':localStorage.getItem('authToken')\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                swal(`${response.data.errors.message}`,\"\",\"error\")\r\n            }\r\n            else{\r\n            swal({\r\n                title: \"Edited!\",\r\n                text: `Edited! You can close the Modal`,\r\n                icon: \"success\",\r\n                timer: 2000\r\n                })\r\n            dispatch(editTask(response.data))\r\n            }\r\n        })\r\n    \r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const startTaskDelete=(id)=>{\r\n    return(dispatch)=>{\r\n        axios.delete(`/task/${id}`,{\r\n            headers:{\r\n                'x-auth':localStorage.getItem('authToken')\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                swal(`${response.data.errors.message}`,\"\",\"error\")\r\n            }\r\n            else{\r\n                swal({\r\n                    title: \"Deleted!\",\r\n                    text: `Deleted!`,\r\n                    icon: \"success\",\r\n                    timer: 1000\r\n                    })\r\n            dispatch(deleteTask(id))\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const startUnArchive=(obj,id)=>{\r\n\r\n    return(dispatch)=>{\r\n        axios.put(`/task/${id}`,obj,{\r\n            headers:{\r\n                'x-auth':localStorage.getItem('authToken')\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                swal(`${response.data.errors.message}`,\"\",\"error\")\r\n            }\r\n            else{\r\n            swal({\r\n                title: \"Edited!\",\r\n                text: `UnArchived!`,\r\n                icon: \"success\",\r\n                timer: 1000\r\n                })\r\n            dispatch(editTask(response.data))\r\n            }\r\n        })\r\n    \r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const startTaskTrash=(obj,id)=>{\r\n    return(dispatch)=>{\r\n        axios.put(`/task/${id}`,obj,{\r\n            headers:{\r\n                'x-auth':localStorage.getItem('authToken')\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                swal(`${response.data.errors.message}`,\"\",\"error\")\r\n            }\r\n            else{\r\n            swal({\r\n                title: \"Edited!\",\r\n                text: `Moved to Trash`,\r\n                icon: \"success\",\r\n                timer: 1000\r\n                })\r\n            dispatch(editTask(response.data))\r\n            }\r\n        })\r\n    \r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const  startSetTasks=()=>{\r\n    return(dispatch)=>{\r\n    axios.get('/task',{\r\n        headers:{\r\n            'x-auth':localStorage.getItem('authToken')\r\n        }\r\n    })\r\n    .then((response)=>{\r\n        if(response.data.hasOwnProperty('errors')){\r\n            swal(`${response.data.errors.message}`,\"\",\"error\")\r\n        }\r\n        else{\r\n            console.log(response.data)\r\n            dispatch(setTasks(response.data))\r\n        }   \r\n    })\r\n    .catch((err)=>{\r\n        alert(err)\r\n    })\r\n}\r\n}\r\n\r\n\r\nexport const startAddTask=(task)=>{\r\n    return (dispatch)=>{\r\n        axios({\r\n            method:'post',\r\n            url:'/task',\r\n            data:task,\r\n            headers:{\r\n                'x-auth':localStorage.getItem('authToken'),\r\n                \r\n            }\r\n\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.hasOwnProperty('errors')){\r\n                swal(`${response.data.errors.message}`,\"\",\"error\")\r\n            } else {\r\n                swal({title: \"Task Created!\",\r\n                    text: `You created new task`,\r\n                    icon: \"success\",\r\n                    timer: 1000})\r\n                    console.log(response.data)\r\n                    dispatch(addTask(response.data))\r\n            }\r\n\r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Button,Modal,Form } from 'react-bootstrap';\r\n\r\nclass AddLabel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n                show:false,\r\n                label:''\r\n        }\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({label:e.target.value})\r\n    }\r\n    handleClose=()=> {\r\n        this.setState({ show: false });\r\n      }\r\n    \r\n      handleShow=()=> {\r\n        this.setState({ show: true });\r\n      }\r\n      handleLableSubmit=(e)=>{\r\n          e.preventDefault()\r\n          e.stopPropagation()\r\n          this.setState({ show: false });\r\n          this.props.handleLableSubmit(this.state.label)\r\n      }\r\n\r\n\r\n    render(){\r\n    return (\r\n        <React.Fragment>\r\n        <Button className=\"btn btn-primary btn-sm\"  onClick={this.handleShow}>\r\n          Add Label\r\n        </Button>\r\n                <Modal show={this.state.show} onHide={this.handleClose}\r\n                        size=\"sm\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered\r\n                    >\r\n                            <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Add New Label\r\n                            </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                            <Form onSubmit={this.handleLableSubmit}>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label>Label Name</Form.Label>\r\n                                <Form.Control name=\"label\" value={this.state.label} onChange={this.handleChange} type=\"text\" placeholder=\"Label name...\" />\r\n                            </Form.Group>\r\n                            </Form>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button onClick={this.handleClose}>Close</Button>\r\n                            </Modal.Footer>\r\n                    </Modal>\r\n                    </React.Fragment>\r\n    );\r\n    }\r\n  }\r\n\r\n  export default AddLabel\r\n  \r\n  ","import React from 'react'\r\nimport {Row,Col,Button} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport {startAddTask,startEditTask} from '../../actions/tasks'\r\nimport archive from '@iconify/icons-fa/archive';\r\nimport { Icon } from '@iconify/react';\r\nimport thumbTack from '@iconify/icons-fa/thumb-tack';\r\nimport AddLabel from './AddLabel'\r\nimport './task.css'\r\n\r\nclass AddTask extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            title:(props.taskInfo)?props.taskInfo.title:'',\r\n            taskBody: (props.taskInfo)?props.taskInfo.taskBody:'',\r\n            color:(props.taskInfo)?props.taskInfo.color:'#ffffff',\r\n            pinTask:(props.taskInfo)?props.taskInfo.pinTask:false,\r\n            label:(props.taskInfo)?props.taskInfo.label:[],\r\n            archive:(props.taskInfo)?props.taskInfo.archive:false,\r\n            file:''\r\n        }\r\n\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n\r\n    }\r\n    handlePinClick=(e)=>{\r\n        this.setState({pinTask:true})\r\n    }\r\n    handleIconClick=(e)=>{\r\n        this.setState({pinTask:false})\r\n    }\r\n    handleLableSubmit=(label)=>{\r\n        this.setState((prevState)=>{\r\n            return{\r\n                label:[...prevState.label,label]\r\n            }\r\n        })\r\n    }\r\n    handleIconArchiveClick=(e)=>{\r\n        this.setState({archive:false})\r\n    }\r\n    handleArchiveClick=(e)=>{\r\n        this.setState({archive:true})\r\n    }\r\n    \r\n\r\n    fileHandle = (e) => {\r\n\r\n        const file = e.target.files\r\n        // console.log(file)\r\n        this.setState(() => ({ file }))\r\n    }\r\n    \r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if(this.props.taskInfo){\r\n            const obj=Object.assign({},this.state)\r\n            this.props.dispatch(startEditTask(obj,this.props.taskInfo._id))\r\n          }\r\n          else{\r\n              //console.log('state',this.state)\r\n              const formData = new FormData();\r\n              const {title,taskBody,color,pinTask,label}=this.state\r\n              formData.append('title',title)\r\n              formData.append('taskBody',taskBody)\r\n              formData.append('color',color)\r\n              formData.append('pinTask',pinTask)\r\n              formData.append('label',label)\r\n              for (const file of this.state.file) {\r\n                formData.append('image', file)\r\n            }\r\n           // console.log('formData',formData)\r\n           // const task = Object.assign({},this.state)\r\n            //console.log('task',task)\r\n          this.setState({title:'',taskBody:'',color:'#ffffff',pinTask:false,file:'',label:[],archive:false})\r\n            this.props.dispatch(startAddTask(formData))\r\n          }\r\n        \r\n    }\r\n  \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                \r\n                <form  onSubmit={(e)=>this.handleSubmit(e)}>\r\n                    <div style={{backgroundColor:`${this.state.color}`}} className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            Add Task\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <input type=\"text\" className=\"card-title form-control\" placeholder=\"Title\" onChange={(e)=>this.handleChange(e)} name=\"title\" value={this.state.title}></input>\r\n                            <br/>\r\n                            <textarea className=\"form-control\" rows=\"3\" type=\"text\"  placeholder=\"Take a note...\" onChange={(e)=>this.handleChange(e)} name=\"taskBody\" value={this.state.taskBody}></textarea>\r\n                            <br/>\r\n                           {this.state.label.length>0 && <strong>Labels</strong>} \r\n                            <Row>\r\n\r\n                            <Col>\r\n                            {this.state.label.length>0 && this.state.label.map((l,i)=>{\r\n                                    return <p key={i}>{l}</p>\r\n                                    })\r\n                                    \r\n                            }\r\n                            </Col>\r\n                                </Row>\r\n                                <Row>\r\n                            <Col className=\"col-sm-2 form-buttons\">\r\n                                <label> Color:\r\n                                    \r\n                            <input type=\"color\"  value={this.state.color} name=\"color\" onChange={(e)=>this.handleChange(e)}/>\r\n                            \r\n                            </label>\r\n                            </Col>\r\n                            <Col className=\"col-sm-3 form-buttons\">\r\n                            {(this.state.pinTask)?<Icon onClick={(e)=>this.handleIconClick(e)} icon={thumbTack} />:<Button type=\"button\" onClick={(e)=>this.handlePinClick(e)} className=\"btn btn-primary btn-sm\">Pin Task</Button>}\r\n                            </Col>\r\n                            <Col className=\"col-sm-3 form-buttons\">\r\n                            {(this.state.archive)?<Icon onClick={(e)=>this.handleIconArchiveClick(e)} icon={archive} />:<Button type=\"button\" onClick={(e)=>this.handleArchiveClick(e)} className=\"btn btn-primary btn-sm\">Archive</Button>}\r\n                            </Col>\r\n                            <Col className=\"col-sm-3 form-buttons \">\r\n                            \r\n                            < AddLabel handleLableSubmit={this.handleLableSubmit}/>\r\n                            </Col>\r\n                           \r\n                            <Col className=\"col-sm-3 form-buttons\">\r\n                            <Button className=\"btn btn-success\" type=\"submit\">Submit</Button>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row>\r\n                            <Col className=\"col-sm-6 form-buttons \">\r\n                            <input\r\n                                                    name=\"image\" onChange={this.fileHandle}\r\n                                                    multiple\r\n                                                    type=\"file\"\r\n                                                />\r\n                            </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </React.Fragment>\r\n        )}\r\n\r\n        }\r\n\r\nexport default connect()(AddTask)\r\n","import React from 'react'\r\nimport { Button,Modal } from 'react-bootstrap';\r\nimport AddTask from './AddTask'\r\n\r\n\r\nclass EditTask extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    \r\n        this.state = {\r\n          show: false\r\n        };\r\n      }\r\n    \r\n      handleClose() {\r\n        this.setState({ show: false });\r\n      }\r\n    \r\n      handleShow() {\r\n        this.setState({ show: true });\r\n      }\r\n    \r\n      render() {\r\n        \r\n    \r\n        return (\r\n          <div>\r\n           \r\n    \r\n            <Button className=\"btn btn-warning\" onClick={this.handleShow}>\r\n              Edit \r\n            </Button>\r\n    \r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Edit Task</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <AddTask taskInfo={this.props.taskInfo} />\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button onClick={this.handleClose}>Close</Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default EditTask","import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport {startTaskTrash,startUnArchive} from '../../actions/tasks'\r\nimport AddTask from './AddTask'\r\nimport EditTask from './EditTask'\r\nimport { Icon } from '@iconify/react';\r\nimport thumbTack from '@iconify/icons-fa/thumb-tack';\r\nimport {Link} from 'react-router-dom'\r\nimport trash from '@iconify/icons-fa/trash';\r\nimport './task.css'\r\nimport archive from '@iconify/icons-fa/archive';\r\nclass TaskList extends React.Component{\r\n   \r\n    handleTaskDelete=(obj,id)=>{\r\n        obj.bin=true\r\n        this.props.dispatch(startTaskTrash(obj,id))\r\n    }\r\n    handleUnArchive=(t,id)=>{\r\n        t.archive=true\r\n        this.props.dispatch(startUnArchive(t,id))\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n             <Container>\r\n                 <Row>\r\n                 <Col className=\"col-lg-3 \">\r\n                     <Link className=\"button\" to =\"label\">Labels</Link><br/>\r\n                     <Link className=\"button\" to =\"archive\">Archive</Link><br/>\r\n                     <Link className=\"button\" to =\"bin\">Bin</Link><br/>\r\n                     </Col>\r\n                 <Col className=\"col-lg-6 \">\r\n                    <AddTask/>\r\n             \r\n             </Col>\r\n             </Row>\r\n             </Container>\r\n             <br/>\r\n                <div className=\"row\">\r\n                   \r\n                    {this.props.taskList.map((t)=>{\r\n                        if(t.pinTask && !t.archive && !t.bin){\r\n                        return(\r\n                            <div key={t._id} className=\"card col-lg-3  offset-1\" style={{maxWidth: \"18rem\",backgroundColor:`${t.color}`}}>\r\n                                <div className=\"card-header \">\r\n                               <strong>{t.title}</strong> \r\n                                 \r\n                               { (t.pinTask)?<Icon icon={thumbTack} />:null} \r\n                                </div>\r\n                                {t.imageUrl.map((i,ind)=>{\r\n                                    \r\n                                   return <img key={ind} src={i} className=\"card-img-top\" alt=\"some\"></img>\r\n                                })}\r\n                                <div className=\"card-body\">\r\n                                    <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                    <hr/>\r\n                                    <strong>Label</strong> \r\n                                   {t.label.length>0 && t.label.map((l,i)=>{\r\n                                    return <p key={i}>{l}</p>\r\n                                    })\r\n                                    \r\n                                }\r\n                                <Row>\r\n                                    <Col className=\"col-md-3 offset-1\">\r\n                                    <EditTask taskInfo={t}/> \r\n                                    </Col>\r\n                                    <Col className=\"col-md-3 offset-1\">\r\n                                   <Icon onClick={(e)=>this.handleUnArchive(t,t._id)} icon={archive}/>\r\n                                   \r\n                                   </Col>   \r\n                                    <Col className=\"col-md-3 offset-1\">\r\n                                    <Icon onClick={()=>this.handleTaskDelete(t,t._id)} icon={trash} />\r\n                                    \r\n                                    </Col>   \r\n                                </Row>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })}\r\n                   \r\n                   \r\n                    \r\n                    {this.props.taskList.map((t)=>{\r\n                        if(!t.pinTask && !t.archive && !t.bin){\r\n                        return(\r\n                            <div key={t._id} className=\"card col-lg-3 offset-1\" style={{maxWidth: \"18rem\",backgroundColor:`${t.color}`}}>\r\n                                <div className=\"card-header \">\r\n                                <strong>{t.title}</strong> \r\n                                 \r\n                               { (t.pinTask)?<Icon icon={thumbTack} />:null} \r\n                                </div>\r\n                                {t.imageUrl.map((i,ind)=>{\r\n                                    \r\n                                   return <img key={ind} src={i} className=\"card-img-top\" alt=\"some\"></img>\r\n                                })}\r\n                                <div className=\"card-body\">\r\n                                    <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                    <hr/>\r\n                                    <strong>Label</strong> \r\n                                    {t.label.length>0 && t.label.map((l,i)=>{\r\n                                    return <p key={i}>{l}</p>\r\n                                    })\r\n                                    \r\n                                }\r\n                                <Row>\r\n                                <Col className=\"col-md-3 offset-1\">\r\n                                <EditTask taskInfo={t}/>  \r\n                                </Col>\r\n                                <Col className=\"col-md-3 offset-1\">\r\n                                   <Icon onClick={(e)=>this.handleUnArchive(t,t._id)} icon={archive}/>\r\n                                   \r\n                                   </Col>  \r\n                                <Col className=\"col-md-3 offset-1\">                                  \r\n                                <Icon onClick={()=>this.handleTaskDelete(t,t._id)} icon={trash} />\r\n                                </Col> \r\n                                </Row>\r\n                                \r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })}\r\n                    \r\n                   \r\n              </div>\r\n              \r\n              </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        taskList:state.taskList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskList)","import React from 'react'\r\nimport {Container,Row,Col,Button,Form} from 'react-bootstrap'\r\nimport axios from '../../config/axios'\r\nclass ResetPassword extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            issubmit:false\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    handleLoginSubmit=(e)=>{\r\n        e.preventDefault()\r\n        axios.post('/reset',this.state)\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                alert(response.data.errors.message)\r\n\r\n            }else{\r\n               \r\n                this.setState({email:'',issubmit:true})\r\n            }\r\n        })\r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n        \r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"col-lg-5\">\r\n                        {(this.state.issubmit)?<h1>Password reset Link is sent to the Registered Email.Please Login using the link</h1>:\r\n                            <Form onSubmit={this.handleLoginSubmit}>\r\n                                <Form.Group controlId=\"formGroupEmail\">\r\n                                    <Form.Label>Email address</Form.Label>\r\n                                    <Form.Control name=\"email\" value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                                </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Submit</Button>\r\n                            </Form>\r\n                    }\r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword","import React from 'react'\r\nimport {Container,Row,Col,Button,Form} from 'react-bootstrap'\r\nimport axios from '../../config/axios'\r\nclass NewPassword extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            password:'',\r\n            confirmPassword:''\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    handleLoginSubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log(this.props.location)\r\n        axios.post(`/new-password${this.props.location.search}`,this.state)\r\n        .then((response)=>{\r\n            if(response.data.errors){\r\n                alert(response.data.errors.message)\r\n            }\r\n            else{\r\n                if(response.data._id){\r\n                    this.props.history.push('/users/login')\r\n                }\r\n            }\r\n           \r\n            \r\n    })\r\n        .catch((err)=>{\r\n            alert(err)\r\n        })\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"col-lg-5\">\r\n                            <Form onSubmit={this.handleLoginSubmit}>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                    <Form.Label>Passoword</Form.Label>\r\n                                    <Form.Control name=\"password\" value={this.state.password} onChange={this.handleChange} type=\"password\" required={true} placeholder=\"Enter password\" />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formGroupConfirmPassword\">\r\n                                    <Form.Label>Confirm password</Form.Label>\r\n                                    <Form.Control name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.handleChange} required={true} type=\"password\" placeholder=\"Re-enter Password\" />\r\n                                </Form.Group>\r\n                           {(this.state.password===this.state.confirmPassword)? <Button variant=\"primary\" type=\"submit\">\r\n                            Submit</Button>:<p>Passwords did not match</p>}\r\n                            </Form>\r\n                    \r\n            </Col>\r\n            </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Icon } from '@iconify/react';\r\nimport thumbTack from '@iconify/icons-fa/thumb-tack';\r\nimport archive from '@iconify/icons-fa/archive';\r\nimport {Row,Col,Button} from 'react-bootstrap'\r\nimport EditTask from './EditTask'\r\nimport {startUnArchive} from '../../actions/tasks'\r\nclass Archive extends React.Component{\r\n    handleUnArchive=(t,id)=>{\r\n        t.archive=false\r\n        this.props.dispatch(startUnArchive(t,id))\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n            <h1>Archive</h1>\r\n            <div className=\"row\">\r\n                   \r\n                   {this.props.archiveList.map((t)=>{\r\n                       if(t.pinTask && t.archive){\r\n                       return(\r\n                           <div key={t._id} className=\"card col-lg-3 offset-1\" style={{maxWidth: \"18rem\",backgroundColor:`${t.color}`, margin:'5px'}}>\r\n                               <div className=\"card-header\">\r\n                               {t.title}\r\n                                \r\n                              { (t.pinTask)?<Icon icon={thumbTack} />:null} \r\n                            \r\n                             \r\n                               </div>\r\n                               {t.imageUrl.map((i,ind)=>{\r\n                                   \r\n                                  return <img key={ind}src={i} className=\"card-img-top\" alt=\"some\"></img>\r\n                               })}\r\n                               <div className=\"card-body\">\r\n                                   <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                   <hr/>\r\n                                  {t.label.length>0 && t.label.map((l,i)=>{\r\n                                   return <p key={i}>{l}</p>\r\n                                   })\r\n                                   \r\n                               }\r\n                               <Row>\r\n                                   <Col className=\"col-md-3 offset-1\">\r\n                                   <EditTask taskInfo={t}/>\r\n                                   </Col> \r\n                                   <Col className=\"col-md-3 offset-1\">\r\n                                   <Button className=\"btn btn-danger\" onClick={(e)=>this.handleTaskDelete(e,t._id)} >Delete</Button>\r\n                                   </Col> \r\n                                   <Col className=\"col-md-3 offset-1\">\r\n                                   <Icon onClick={(e)=>this.handleUnArchive(t,t._id)} icon={archive}/>\r\n                                   \r\n                                   </Col>  \r\n                               </Row>\r\n                               </div>\r\n                               \r\n                           </div>\r\n                       )\r\n                       }else{\r\n                           return null\r\n                       }\r\n                   })}\r\n                   {this.props.archiveList.map((t)=>{\r\n                        if(!t.pinTask && t.archive){\r\n                        return(\r\n                            <div key={t._id} className=\"card col-lg-3 offset-1\" style={{maxWidth: \"18rem\",backgroundColor:`${t.color}`,margin:'5px'}}>\r\n                                <div className=\"card-header\">\r\n                                {t.title}\r\n                                 \r\n                               { (t.pinTask)?<Icon icon={thumbTack} />:null} \r\n                               \r\n                                </div>\r\n                                {t.imageUrl.map((i,ind)=>{\r\n                                    \r\n                                   return <img src={i} key={ind} className=\"card-img-top\" alt=\"some\"></img>\r\n                                })}\r\n                                <div className=\"card-body\">\r\n                                    <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                    <hr/>\r\n                                    {t.label.length>0 && t.label.map((l,i)=>{\r\n                                    return <p key={i}>{l}</p>\r\n                                    })\r\n                                    \r\n                                }\r\n                                <Row>\r\n                                <Col className=\"col-md-3 offset-1\">\r\n                                <EditTask taskInfo={t}/>  \r\n                                </Col>\r\n                                <Col className=\"col-md-3 offset-1\">                                  \r\n                                <Button className=\"btn btn-danger\" onClick={(e)=>this.handleTaskDelete(e,t._id)} >Delete</Button>\r\n                                </Col> \r\n                                <Col className=\"col-md-3 offset-1\">\r\n                                   <Icon onClick={(e)=>this.handleUnArchive(t,t._id)} icon={archive}/>\r\n                                   \r\n                                   </Col> \r\n                                </Row>\r\n                                \r\n                                </div>\r\n                                \r\n                            </div>\r\n                        )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })}\r\n                    \r\n                  </div>\r\n                  </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        archiveList:state.taskList\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Archive)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Row,Col,Button} from 'react-bootstrap'\r\nimport {startTaskDelete} from '../../actions/tasks'\r\nimport swal from 'sweetalert'\r\nclass Bin extends React.Component{\r\n    handleTaskDelete=(e,id)=>{\r\n        swal({\r\n            title: \"Are you sure you want to Delete it Permanently?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n            this.props.dispatch(startTaskDelete(id))\r\n              swal(\"Successfully Deleted\", {\r\n                icon: \"success\",\r\n                timer: 500\r\n              });\r\n        \r\n    }\r\n})\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n            <h1>Bin</h1>\r\n            <div className=\"row\">\r\n                   \r\n                   {this.props.binList.map((t)=>{\r\n                       if(t.bin){\r\n                       return(\r\n                           <div key={t._id} className=\"card col-lg-3 offset-1\" style={{maxWidth: \"18rem\",backgroundColor:`${t.color}`}}>\r\n                               <div className=\"card-header\">\r\n                               <strong>{t.title}</strong>\r\n                             \r\n                               </div>\r\n                               {t.imageUrl.map((i,ind)=>{\r\n                                   \r\n                                  return <img key={ind}src={i} className=\"card-img-top\" alt=\"some\"></img>\r\n                               })}\r\n                               <div className=\"card-body\">\r\n                                   <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                   <hr/>\r\n                                   <strong>Labels</strong>\r\n                                  {t.label.length>0 && t.label.map((l,i)=>{\r\n                                   return <p key={i}>{l}</p>\r\n                                   })\r\n                                   \r\n                               }\r\n                               <Row>\r\n                                \r\n                                   <Col className=\"col-md-3 offset-3\">\r\n                                   <Button className=\"btn btn-danger\" onClick={(e)=>this.handleTaskDelete(e,t._id)} >Delete</Button>\r\n                                   </Col>   \r\n                               </Row>\r\n                               </div>\r\n                               <br/>\r\n                           </div>\r\n                       )\r\n                       }else{\r\n                           return null\r\n                       }\r\n                   })}\r\n               \r\n                    \r\n                  </div>\r\n                  </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        binList:state.taskList\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Bin)","import React from 'react'\r\nimport Select from 'react-select'\r\nimport {connect} from 'react-redux'\r\nimport thumbTack from '@iconify/icons-fa/thumb-tack';\r\nimport { Icon } from '@iconify/react';\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nclass Label extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n           name:'' \r\n        }\r\n    }\r\n    handleName=(values)=>{\r\n        this.setState({name:values.label})\r\n    }\r\n\r\n    render(){ \r\n        let arr=[]\r\n        this.props.labelList.forEach((t)=>{\r\n           arr =[...arr,...t.label]\r\n       })\r\n       const options=arr.map((l,ind)=>{return({value:ind,label:l})})\r\n       options.unshift({value:'select',label:'Select'})\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <h5>Select Label</h5>\r\n                                <Select  options={options} onChange={(values)=>{this.handleName(values)}}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                    {this.props.labelList.map((t)=>{\r\n                        if(t.label.indexOf(`${this.state.name}`)!==-1){\r\n                        return(\r\n                            \r\n                            <div key={t._id} className=\"card col-lg-3 offset-1\" style={{maxWidth:\"16rem\",backgroundColor:`${t.color}`}}>\r\n                                <div className=\"card-header\">\r\n                               <strong>{t.title}</strong> \r\n                                 \r\n                               { (t.pinTask)?<Icon icon={thumbTack} />:null} \r\n                               \r\n                                </div>\r\n                                {t.imageUrl.map((i,ind)=>{\r\n                                    \r\n                                   return <img src={i} key={ind} className=\"card-img-top\" alt=\"some\"></img>\r\n                                })}\r\n                                <div className=\"card-body\">\r\n                                    <p  className=\"card-text\" >{t.taskBody}</p>\r\n                                    <hr/>\r\n                                    <strong>Labels</strong>\r\n                                    {t.label.length>0 && t.label.map((l,i)=>{\r\n                                    return <p key={i}>{l}</p>\r\n                                    })\r\n                                    \r\n                                }\r\n                                \r\n                                </div>\r\n                               \r\n                            </div>\r\n                        )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })}\r\n                    </div>\r\n                    </Container>\r\n                 </div>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        labelList:state.taskList\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Label)","import React from 'react';\nimport {BrowserRouter,Route,Link,Switch} from 'react-router-dom'\nimport Register from './components/user/Register'\nimport swal from 'sweetalert'\nimport {Navbar,Nav,NavItem} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport Login from './components/user/Login'\nimport {startRemoveUser} from './actions/user'\nimport Dashboard from './components/tasks/TaskList'\nimport ResetPassword from './components/user/ResetPasword'\nimport NewPassword from './components/user/NewPassword'\nimport Archive from './components/tasks/Archive'\nimport Bin from './components/tasks/Bin'\nimport Label from './components/tasks/Label'\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <Navbar bg=\"dark\" variant=\"dark\" >\n      <Navbar.Brand >Google Keep</Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        \n     \n      { (Object.keys(props.user).length===0)?(\n        <React.Fragment>\n          <NavItem>\n      <Link to =\"/users/register\"> Register</Link> |\n      </NavItem>\n      <NavItem>\n      <Link to =\"/users/login\"> Login </Link> \n      </NavItem>\n      </React.Fragment>\n      ):\n       \n      <React.Fragment>\n        <NavItem>\n        <Link to =\"/dashboard\">Dashboard</Link>\n        </NavItem>\n\n        \n      <NavItem> |\n      <Link to =\"#\" onClick={()=>{\n            swal({\n              title: \"Are you sure you want to log out?\",\n              icon: \"warning\",\n              buttons: true,\n              dangerMode: true,\n            })\n            .then((willDelete) => {\n              if (willDelete) {\n                swal(\"Successfully Logged out\", {\n                  icon: \"success\",\n                  timer: 500\n                });\n                props.dispatch(startRemoveUser())\n              } \n            })\n            }}> Logout</Link>\n            </NavItem>\n       </React.Fragment>\n       \n          }\n       </Nav>\n       </Navbar>\n      <Switch>\n      <Route path=\"/users/register\" component={Register}/>\n      <Route path =\"/users/login\" component={Login}/>\n      <Route path =\"/dashboard\"  component={Dashboard}/>\n      <Route path=\"/reset\" component={ResetPassword}/>\n      <Route path=\"/new-Password\" component={NewPassword}/>\n      <Route path=\"/archive\" component={Archive}/>\n      <Route path =\"/bin\" component={Bin}/>\n      <Route path =\"/label\" component={Label}/>\n      </Switch>\n      </BrowserRouter>\n  );\n}  \nconst mapStateToProps=(state)=>{\n  return{\n    user:state.user\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const userReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case 'SET_USER':\r\n            return {...action.payload}\r\n        case 'REMOVE_USER': return {}\r\n        default :\r\n        return {...state}\r\n        \r\n    }\r\n}\r\n\r\nexport default userReducer","const taskListReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case 'ADD_TASK':\r\n            return [...state, action.payload]\r\n        case 'SET_TASK':\r\n            return [...action.payload]\r\n        case 'REMOVE_TASK':\r\n            return state.filter((t)=>{return t._id!==action.payload})\r\n        case \"EDIT_TASK\":\r\n            return state.map((t)=>{if(t._id===action.payload._id){\r\n                                return action.payload\r\n                                    }\r\n                                    else{\r\n                                        return t\r\n                                    }\r\n        })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default taskListReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore'\nimport axios from './config/axios'\nimport {setUser} from './actions/user'\nimport {startSetTasks} from './actions/tasks'\n\nconst store = configureStore()\n\nconsole.log(store.getState())\nstore.subscribe(()=>{\n    console.log(store.getState())\n})\n\nif(localStorage.getItem('authToken')){\n    axios.get('/users/account',{\n        headers:{\n            'x-auth':localStorage.getItem('authToken')\n        }\n    })\n    .then((response)=>{\n        const user=response.data\n        store.dispatch(setUser(user))\n        store.dispatch(startSetTasks()) \n    })\n}\n\nReactDOM.render(<Provider store={store}>\n<App /> </Provider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport userReducer from '../reducers/userReducer'\r\nimport thunk from 'redux-thunk'\r\nimport taskListReducer from '../reducers/taskListReducer'\r\nconst configureStore=()=>{\r\n    const store = createStore(combineReducers({\r\n        user:userReducer,\r\n        taskList:taskListReducer\r\n    }),applyMiddleware(thunk))\r\n    return store\r\n}\r\n\r\nexport default configureStore"],"sourceRoot":""}